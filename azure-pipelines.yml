pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands: maven

steps:
  # List the contents of the source directory
  - script: |
      echo "Listing contents of src/main/resources/"
      dir "$(Build.SourcesDirectory)\src\main\resources"
    displayName: 'List contents of resources directory'

  # Check if the Excel file is present and not empty
  - script: |
      echo "Checking Test_Data.xlsx in src/main/resources/"
      if [ ! -s "$(Build.SourcesDirectory)\src\main\resources\Test_Data.xlsx" ]; then
        echo "Error: Test_Data.xlsx is empty or does not exist."
        exit 1
      fi
    displayName: 'Verify Test_Data.xlsx presence'

  # Copy the Excel file to the build directory
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/src/main/resources'
      Contents: 'Test_Data.xlsx'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/resources'
    displayName: 'Copy Test_Data.xlsx to resources'

  # List the contents of the target directory
  - script: |
      echo "Listing contents of $(Build.ArtifactStagingDirectory)/resources/"
      dir "$(Build.ArtifactStagingDirectory)\resources"
    displayName: 'List contents of target resources directory'

  # Run Maven build and tests
  - task: Maven@3
    displayName: 'Maven pom.xml'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'test compile'
      options: '-Dexcel.file.path=$(Build.ArtifactStagingDirectory)/resources/Test_Data.xlsx'
      testResultsFiles: '**/target/surefire-reports/*.xml'
      testRunTitle: 'Test Run'

  # Copy build artifacts
  - task: CopyFiles@2
    displayName: 'Copy JAR files to: $(Build.ArtifactStagingDirectory)/target'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/target'
      Contents: '**/*.jar'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/target'
      CleanTargetFolder: true
    condition: succeededOrFailed()

  # Publish build artifacts
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/target'
      artifactName: 'drop'
    condition: succeededOrFailed()

  # Publish test results
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '**/target/surefire-reports/*.xml'
      failTaskOnFailedTests: true
      mergeTestResults: false
      testRunTitle: 'Regression Test'
    condition: succeededOrFailed()

  # Copy screenshots
  - task: CopyFiles@2
    displayName: 'Copy Screenshots to: $(Build.ArtifactStagingDirectory)/screenShots'
    inputs:
      SourceFolder: 'screenShots'
      Contents: '*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/screenShots'
      CleanTargetFolder: true
    condition: succeededOrFailed()

  # Publish screenshots
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: screenshots'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/screenShots'
      artifactName: 'screenshots'
      publishLocation: 'Container'
    condition: always()
