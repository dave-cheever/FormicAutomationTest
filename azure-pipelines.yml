pool:
  name: Azure Pipelines
  demands: maven

steps:
  - task: Maven@3
    displayName: 'Maven pom.xml'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'test compile'
      testResultsFiles: '**/target/surefire-reports/junitreports/*.xml'
      testRunTitle: 'Test Run sample'
      allowBrokenSymlinks: false
      jdkVersionOption: 1.17

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: src
      Contents: '**/*.jar'
      TargetFolder: '$(build.artifactstagingdirectory)'
      CleanTargetFolder: true
    condition: succeededOrFailed()

  - task: CopyFiles@2
    displayName: 'Copy Screenshots to: $(build.artifactstagingdirectory)/screenshots'
    inputs:
      SourceFolder: 'src/test/java/screenShots'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)/.screenShots'
      CleanTargetFolder: true
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)/.screenShots'
      artifactName: 'Screenshots'
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
      mergeTestResults: false
      testRunTitle: 'Your Test Run Title'

  - task: PowerShell@2
    displayName: 'Attach Screenshots to Failed Tests'
    inputs:
      targetType: 'inline'
      script: |
        $testResults = Get-Content $(System.DefaultWorkingDirectory)/TestResults/*.xml
        $screenshots = Get-ChildItem $(System.DefaultWorkingDirectory)/screenshots/*.png -ErrorAction SilentlyContinue
        
        if ($testResults -and $screenshots) {
            $testResults | ForEach-Object {
                $result = $_
                $testName = [xml]$result | Select-Xml "//UnitTestResult" | ForEach-Object { $_.Node.SelectSingleNode('@testName').Value }
        
                if ($result -match '<Outcome>Failed</Outcome>' -and $testName) {
                    $screenshot = $screenshots | Where-Object { $_.BaseName -eq $testName }
                    if ($screenshot) {
                        Write-Host "##vso[task.addattachment type=png;name=$($screenshot.Name);]$($screenshot.FullName)"
                    }
                }
            }
        }
    condition: failed()
