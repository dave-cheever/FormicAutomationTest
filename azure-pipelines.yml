# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: Maven@3
    inputs:
      mavenPomFile: '$(Build.SourcesDirectory)/src/pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'
      jdkArchitectureOption: 'x64'
      goals: 'clean verify'  # Include 'clean' to ensure a clean build
      codeCoverageToolOption: 'None'  # If you don't need code coverage reports

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/src/target'
      artifactName: 'test-results'

  - script: |
      # Debugging: List the contents of the surefire-reports directory
      ls -R $(Build.SourcesDirectory)/src/target/surefire-reports
    displayName: 'List the contents of the surefire-reports directory'

#  - script: |
#      # Run your TestNG test suites
#      -Dtestng.config.path=$(Build.SourcesDirectory)/testng.xml
#      # Adjust the command based on your build tool and test suite configuration
#    displayName: 'Run TestNG tests'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'  # Specify the format of your test results
      testResultsFiles: '$(Build.SourcesDirectory)/target/surefire-reports/index.html'  # Update this path to match your XML files




